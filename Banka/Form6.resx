<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Gdje je:

 - M mjesečna rata

 - P glavnica (iznos kredita)

 - r mjesečna kamatna stopa (godišnja kamatna stopa podijeljena s 12)

 - n ukupni broj rata


Vrste kredita u Sigurnoj banci

Stambeni krediti: Idealni za kupnju ili adaptaciju nekretnine s dugoročnim rokom otplate i povoljnim kamatnim stopama.

Gotovinski krediti: Brzi krediti bez namjene, jednostavni za dobivanje i s kratkim rokom obrade.

Posjetite najbližu poslovnicu Sigurne banke ili nas kontaktirajte putem našeg web portala za više informacija. Naš tim stručnjaka rado 
će Vam pomoći da odaberete kredit koji najbolje odgovara Vašim potrebama i financijskim mogućnostima. U Sigurnoj banci, Vaša 
financijska sigurnost naš je prioritet.</value>
  </data>
</root>